"use strict";angular.module("webappApp",["ngCookies","ngResource","ngSanitize","ngRoute","googleOauth","mobile-angular-ui","mobile-angular-ui.touch","mobile-angular-ui.scrollable","gapi.client"]).config(["$routeProvider","$locationProvider","TokenProvider",function(a,b,c){a.when("/",{templateUrl:"views/root.html"}).when("/dataset/:sheetId",{templateUrl:"views/dataset.html",controller:"DatasetCtrl"}).when("/datasets",{templateUrl:"views/datasetlist.html",controller:"DatasetListCtrl",active:"datasets"}).otherwise({redirectTo:"/"});var d=document.URL.split("#")[0];"/"===d[d.length-1]&&(d=d.substr(0,d.length-1)),c.extendConfig({clientId:"266506267940-nk8rt8rdrpb8l5j098ugl2v04m6evujn.apps.googleusercontent.com",redirectUri:d+"/oauth2callback.html",scopes:["https://www.googleapis.com/auth/plus.me","https://www.googleapis.com/auth/drive.file","https://spreadsheets.google.com/feeds"]})}]),angular.module("webappApp").controller("DatasetCtrl",["$scope","$routeParams","$http",function(a,b,c){var d=864e5,e="http://schemas.google.com/spreadsheets/2006#worksheetsfeed",f="https://spreadsheets.google.com/feeds/spreadsheets/",g="http://schemas.google.com/spreadsheets/2006#listfeed",h="alternate",i="http://schemas.google.com/spreadsheets/2006/extended";if(a.loaded=!1,a.loading=!1,b.sheetId){var j={};a.$watch("accessToken",function(){return a.accessToken?(j={Authorization:a.accessToken.token_type+" "+a.accessToken.access_token},a.name="",a.targetWeight=100,a.targetDate=new Date,a.weights=[],a.loaded=!1,a.loading=!1,void(a.isSignedIn&&(a.loading=!0,c.get(f+b.sheetId,{responseType:"document",headers:j}).success(function(b){b=angular.element(b),a.name=b.find("title").text(),a.spreadsheetLinks={},angular.forEach(b.find("link"),function(b){b=angular.element(b),a.spreadsheetLinks[b.attr("rel")]=b.attr("href")})}).error(function(){a.loading=!1})))):void(j={})}),a.$watch("spreadsheetLinks",function(){a.spreadsheetLinks&&a.spreadsheetLinks[e]&&(a.spreadsheetViewLink=a.spreadsheetLinks[h],c.get(a.spreadsheetLinks[e],{responseType:"document",headers:j}).success(function(b){a.worksheets=[],angular.forEach(angular.element(b).find("entry"),function(b){var c={};b=angular.element(b),angular.forEach(b.find("link"),function(a){a=angular.element(a),c[a.attr("rel")]=a.attr("href")}),a.worksheets.push({links:c})})}).error(function(){a.loading=!1}))}),a.$watch("worksheets",function(){a.worksheets&&0!==a.worksheets.length&&c.get(a.worksheets[0].links[g],{responseType:"document",headers:j}).success(function(b){a.weights=[],angular.forEach(angular.element(b).find("entry"),function(b){var c,d,e;c=+angular.element(b.getElementsByTagNameNS(i,"timestamp")).text(),d=+angular.element(b.getElementsByTagNameNS(i,"weight")).text(),e=new Date(c),a.weights.push({date:e,weight:d}),a.loaded=!0,a.loading=!1})}).error(function(){a.loading=!1})}),a.$watch("weights",function(){if(a.goal=[],a.weights&&0!==a.weights.length){a.targetDate=new Date(a.weights[0].date.getTime()+100*d),a.startWeight=a.weights[0].weight,a.currentWeight=a.weights[a.weights.length-1].weight,a.progress=1-(a.currentWeight-a.targetWeight)/(a.startWeight-a.targetWeight);for(var b=a.weights[0].date.getTime(),c=a.targetDate.getTime(),e=Math.log(a.startWeight),f=Math.log(a.targetWeight),g=b;c>=g;g+=Math.min(d,(c-b)/100)){var h=(g-b)/(c-b);a.goal.push({date:new Date(g),weight:Math.exp(h*f+(1-h)*e)})}}})}}]),angular.module("webappApp").filter("weight",function(){return function(a){return a+"kg"}}),angular.module("webappApp").directive("waWeightGraph",function(){var a="#428bca",b="#5cb85c";return{template:"",restrict:"E",scope:{weights:"=weights",goal:"=goal"},link:function(c,d){var e=nv.models.lineChart().margin({left:50}).useInteractiveGuideline(!0).transitionDuration(350).showXAxis(!0).showYAxis(!0);e.xAxis.axisLabel("Date").showMaxMin(!1).tickFormat(function(a){return d3.time.format("%e %b %Y")(new Date(a))}),e.yAxis.axisLabel("Weight / kg").tickFormat(function(a){return d3.format(".0f")(a)+" kg"});var f=d3.select(d[0]).append("svg");nv.utils.windowResize(function(){e.update()});var g=function(){var d,g,h=[],i=[];for(g in c.weights)d=c.weights[g],h.push({x:d.date,y:d.weight});for(g in c.goal)d=c.goal[g],i.push({x:d.date,y:d.weight});f.datum([{values:i,key:"goal",color:b},{values:h,key:"weight",color:a}]).call(e)};c.$watch("weights",g),c.$watch("goal",g)}}}),angular.module("webappApp").directive("waProgressBar",function(){return{restrict:"E",templateUrl:"waprogressbar.html",scope:{min:"@",max:"@",value:"@"}}}),angular.module("webappApp").directive("waNav",function(){return{templateUrl:"wanav.html",restrict:"E"}}),angular.module("webappApp").controller("DatasetListCtrl",["$scope","$location","$window",function(a,b,c){a.items=[],a.$watch("isSignedIn",function(){a.refreshList()}),a.refreshList=function(){a.items=[],c.gapi.client.request({path:"drive/v2/files",params:{q:"not trashed and properties has { key = 'isWeightySheet' and value='true' and visibility='PUBLIC'}"},callback:function(b){"drive#fileList"===b.kind&&(console.log("dataset list",b),a.$apply(function(){a.items=[],angular.forEach(b.items,function(b){a.items.push({title:b.title,id:b.id,createdDate:Date.parse(b.createdDate),modifiedDate:Date.parse(b.modifiedDate)})})}))}})},a.create=function(){a.datasetName&&""!==a.datasetName&&(c.gapi.client.request({path:"drive/v2/files",method:"POST",body:{mimeType:"application/vnd.google-apps.spreadsheet",title:a.datasetName,properties:[{key:"isWeightySheet",value:!0,visibility:"PUBLIC"}]},callback:function(b){console.log("create",b),a.refreshList()}}),a.datasetName="")}}]),angular.module("webappApp").directive("waSidebar",function(){return{templateUrl:"partials/sidebar.html",restrict:"E"}}),angular.module("webappApp").controller("GoogleAccountCtrl",["$scope","$window","gapi",function(a,b,c){a.accessToken=null,a.accessTokenExpiry=null,a.isSignedIn=!1;var d={client_id:"266506267940-nk8rt8rdrpb8l5j098ugl2v04m6evujn.apps.googleusercontent.com",scope:["https://www.googleapis.com/auth/plus.me","https://www.googleapis.com/auth/drive.file","https://spreadsheets.google.com/feeds"]};a.doLogin=function(e){e=angular.extend(e||{},d),console.log("Authorising with parameters:",e),c.auth.authorize(e).then(function(c){console.log("Authorization token obtained:",c),a.accessToken=b.gapi.auth.getToken(),a.accessTokenExpiry=new Date(Date.now()+1e3*c.expires_in),a.isSignedIn=!0},function(){a.accessToken=null,a.accessTokenExpiry=null,a.isSignedIn=!1})},a.doLogout=function(){a.accessToken=null,a.accessTokenExpiry=null,a.isSignedIn=!1,b.gapi.auth.setToken(null)},c.ready(function(){a.doLogin({immediate:!0})}),a.$watch("isSignedIn",function(){return a.isSignedIn?(console.log("requesting..."),void b.gapi.client.request({path:"plus/v1/people/me",callback:function(b){console.log(b),"plus#person"===b.kind&&a.$apply(function(){a.me=b})}})):void(a.me=null)})}]);